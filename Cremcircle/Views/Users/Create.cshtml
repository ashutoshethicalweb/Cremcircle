@model Cremcircle.Models.UserViewModel

@{
    ViewBag.Title = "Create User";
    
}

<div class="mainpanel">
    <div class="pageheader">
        <div class="media">
            <div class="pageicon pull-left">
                <i class="fa fa-user"></i>
            </div>
            <div class="media-body">
                <ul class="breadcrumb">
                    <li><a href=""><i class="glyphicon glyphicon-home"></i></a></li>
                    <li><a href="@Url.Action("Index", "Home")">Dashboard</a></li>
                    <li>User</li>
                </ul>
                <h4>Create User</h4>
            </div>
        </div><!-- media -->
    </div><!-- pageheader -->

    <div class="contentpanel">
    <!-- START:// CONTENT GOES HERE -->

    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "frmUser" }))
    {
        @Html.AntiForgeryToken()

        <div class="panel panel-default">
            <div class="panel-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RoleID, "Role", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("RoleID", null, "Select Role", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SecurityTemplateID, "Security Template", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("SecurityTemplateID", null, "Select Security Template", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SecurityTemplateID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LoginName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("CountryID", null, "Select Country", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   

                   @* <div class="col-sm-6">
    <div class="form-group">
         @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label" })
         @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", maxlength = "10" } })
         @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
     </div>
                    </div>*@
                </div>
                @*<div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.HiddenFor(model => model.UserImage)
                            @Html.LabelFor(model => model.UserImage, htmlAttributes: new { @class = "control-label" })
                            @Html.Editor("ImageFile", new { htmlAttributes = new { @class = "form-control", type = "file" } })
                            <i>Only png, jpg, gif extensions are allowed. Max size 1 MB.</i>
                            @Html.ValidationMessageFor(model => model.UserImage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.HiddenFor(model => model.UserSignature)
                            @Html.LabelFor(model => model.UserSignature, htmlAttributes: new { @class = "control-label" })
                            @Html.Editor("ImageFileSignature", new { htmlAttributes = new { @class = "form-control", type = "file", @accept = ".png" } })
                            <i>Only png extension is allowed. Max size 1 MB.</i>
                            @Html.ValidationMessageFor(model => model.UserSignature, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <div class="ckbox ckbox-success">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                
                





            </div>
            <div class="panel-footer">
                <button type="submit" class="btn btn-success" id="addorg">Create User</button>
            </div><!-- panel-footer -->
        </div>
    }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
        <!-- END:// CONTENT GOES HERE -->
        </div><!-- contentpanel -->
        </div>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
